apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'maven'

def releaseFolder = "file://${file("../maven-repo/releases/").absolutePath}"
def snapshotFolder = "file://${file("../maven-repo/snapshots/").absolutePath}"

def versionName = isSnapshot() ? "1.0-SNAPSHOT" : version

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: releaseFolder)
            snapshotRepository(url: snapshotFolder)
            pom {
                project {
                    packaging 'aar'

                    groupId rootProject.group
                    artifactId artifact
                    version versionName

                    developers {
                        developer {
                            id developerId
                            name developerName
                            email developerEmail
                        }
                    }

                    licenses {
                        license {
                            name licenseName
                            url licenseUrl
                        }
                    }
                }
            }
        }
    }
}

if (isSnapshot()) {
    def snapshotsCleanup = project.tasks.register("cleanupSnapshots", Delete) {
        description = "Cleans up old snapshot files"
        delete "${project.rootDir}/maven-repo/snapshots/"
    }
    project.tasks.named("uploadArchives").configure {
        dependsOn(snapshotsCleanup)
    }
}

private boolean isSnapshot() {
    return project.hasProperty("snapshot") && project.property("snapshot").toBoolean()
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    classpath = new ArrayList<File>(project.tasks['assemble'].outputs.files.files)
    sourceDirs = android.sourceSets.main.java.srcDirs
    externalDocumentationLink {
        url = new URL("https://developer.android.com/reference/")
        packageListUrl = new URL("https://developer.android.com/reference/android/support/package-list")
    }
}

task docJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from dokka.outputDirectory
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourceJar
    archives docJar
}